version: "3.7"

services:

  test-node-1:
    image: ${IMAGE}:${BUILD_NUMBER}
    restart: always
    stdin_open: true
    tty: true
    container_name: test-node-1
    entrypoint: [/bin/bash]
    command:
      - -cx
      - |
        mandeNode init $${MONIKER} --chain-id ${CHAIN_ID}
        mandeNode keys add $${VALIDATOR_NAME} --keyring-backend test
        mandeNode add-genesis-account $$(mandeNode keys show $${VALIDATOR_NAME} -a --keyring-backend test) "100000000000000cred"
        sed -i 's/stake/cred/g' /root/.mande-chain/config/genesis.json
        mandeNode gentx $${VALIDATOR_NAME} "1000000cred" \
          --chain-id ${CHAIN_ID} \
          --moniker="$${MONIKER}" \
          --keyring-backend test
        mandeNode validate-genesis
        mandeNode collect-gentxs
        mandeNode validate-genesis
        if [[ -z "$$(grep '\[api\]' -A 5 $${APP_TOML} | grep true)" ]]; then
          sed -i '1,/enable = false/{s/enable = false/enable = true/g}' $${APP_TOML}
        fi
        sed -i 's/cors_allowed_origins.*/cors_allowed_origins = ["*"]/g' $${CONFIG_TOML}
        sed -i 's/cors_allowed_methods.*/cors_allowed_methods = ["*"]/g' $${CONFIG_TOML}
        sed -i 's/cors_allowed_headers.*/cors_allowed_headers = ["*"]/g' $${CONFIG_TOML}
        mandeNode start \
          --pruning=nothing \
          --rpc.laddr=tcp://0.0.0.0:26657
    environment:
      - CONFIG_TOML=/root/.mande-chain/config/config.toml
      - APP_TOML=/root/.mande-chain/config/app.toml
      - MONIKER=test-node-1
      - VALIDATOR_NAME=validator_main

  test-node-2:
    image: ${IMAGE}:${BUILD_NUMBER}
    restart: always
    stdin_open: true
    tty: true
    container_name: test-node-2
    entrypoint: [/bin/bash]
    command:
      - -cx
      - |
        mandeNode init $${MONIKER} --chain-id ${CHAIN_ID}
    environment:
      - CONFIG_TOML=/root/.mande-chain/config/config.toml
      - APP_TOML=/root/.mande-chain/config/app.toml
      - MONIKER=test-node-2
      - VALIDATOR_NAME=validator_2
    depends_on:
      - test-node-1

  frontend:
    build: ./vue
    command: npm run dev -- --host
    restart: always
    volumes:
      - /usr/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - test-node-1
      - test-node-2

  redis:
    image: redis:latest
    restart: always
    command: [ "redis-server", "--bind", "redis", "--port", "6379" ]

  faucet:
    build:
      context: .
      dockerfile: Dockerfile_faucet
    command: npm start
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - redis
